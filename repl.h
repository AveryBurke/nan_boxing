#include <inttypes.h>
// Masks for segments of double
#define MASK_QNAN 0x7ff8000000000000 //0111111111111000000000000000000000000000000000000000000000000000
#define MASK_PAYLOAD 0x0000ffffffffffff //0000000000000000111111111111111111111111111111111111111111111111
#define MASK_EXPONENT 0x7ff0000000000000 //0111111111110000000000000000000000000000000000000000000000000000
#define MASK_PAYLOAD_INT 0x00000000ffffffff //0000000000000000000000000000000011111111111111111111111111111111
#define MASK_TAG 0xffff000000000000 //1111111111111111000000000000000000000000000000000000000000000000

/* masks for types*/
#define MASK_INT 0x0001000000000000 //0000000000000001000000000000000000000000000000000000000000000000
#define MASK_STRING 0x0002000000000000 //0000000000000010000000000000000000000000000000000000000000000000

typedef enum
{
    TYPE_INT,
    TYPE_FLOAT,
    TYPE_STRING,
    TYPE_ERROR
} Tag;

Tag get_type(double value);
int32_t decode_int(double value);
double encode_string(char *value);
uint64_t decode_string(double value);
void print_value(double value);
double new_string(char *value);
double encode_int(double value);
double parse_atom();
double Read();
